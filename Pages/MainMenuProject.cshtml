@page
@model TeamsHubWebClient.Pages.MainMenuProject
@{
    Layout = null;
    ViewData["Title"] = "Menu Principal Project";
}

<link href="/lib/fileinput/fileinput.min.css" media="all" rel="stylesheet" type="text/css" />
<script src="/lib/fileinput/fileinput.min.js"></script>

<style>
    body {
    height: 100%;
            background-image: url('https://wallpapercave.com/wp/wp8286207.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            background-repeat: no-repeat;
            background-color: black;
            color: white;
            font-family: Arial, sans-serif;
        display: flex;
    }

    h1 {
        text-align: center;
        margin-top: 5mm;
    }

    .sidebar {
        width: 60px;
        background-color: #333;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .icon-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .icon {
        font-size: 24px;
        margin: 10px;
        color: #fff;
    }

    .back-btn {
        background: none;
        border: none;
        color: #fff;
        font-size: 24px;
        margin: 10px;
        cursor: pointer;
    }

    .content {
        flex-grow: 1;
        padding: 20px;
    }

    .header {
        text-align: center;
    }

    .board {
        display: flex;
        justify-content: space-around;
    }

    .column {
        border: 1px solid #ccc;
        padding: 10px;
        width: 30%;
        border-radius: 15px; /* Esquinas redondeadas */
    }

    .column-header {
        display: flex;
        justify-content: center;
    }

    .label-background {
        background-color: red;
        padding: 10px;
        border-radius: 10px;
    }

    /* Colores para cada tipo de actividad */
    .column.pending {
        background-color: #0044cc; /* Azul para pendientes */
    }

    .column.in-progress {
        background-color: #cc4444; /* Rojo para en proceso */
    }

    .column.completed {
        background-color: #44cc44; /* Verde para realizadas */
    }

    .activity-list {
        min-height: 100px;
        background-color: rgba(0, 0, 0, 0.2);
        border-radius: 10px; /* Esquinas redondeadas */
    }

    .activity-card {
        background-color: #22272b; /* Color para las tarjetas */
        padding: 15px; /* Márgenes internos */
        border-radius: 10px; /* Esquinas redondeadas */
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); /* Sombra para distinguir entre tarjetas */
        margin-bottom: 10px; /* Espacio entre tarjetas */
    }

    .activity-card h4 {
        margin: 0;
    }

    .activity-card p {
        margin: 0;
        padding-right: 20px; /* Para evitar que el texto esté pegado al borde */
    }

    .activity-card button {
        float: right; /* Alineación del botón a la derecha */
        background-color: #007BFF;
        color: white;
        border: none;
        padding: 10px;
        cursor: pointer;
        border-radius: 5px; /* Esquinas redondeadas para el botón */
    }

    .activity-card button:hover {
        background-color: #0056b3; /* Cambio de color en hover */
    }

    button {
        background-color: #007BFF;
        color: white;
        border: none;
        padding: 10px;
        cursor: pointer;
        border-radius: 5px; /* Esquinas redondeadas */
    }

    button#addActivityBtn {
        margin-top: 10px; /* Ajustar el margen para estar debajo del cuadro */
    }

    /* Estilos para el modal */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        background-color: rgba(0, 0, 0, 0.2);
        margin: 15% auto;
        padding: 20px;
        border-radius: 10px; /* Esquinas redondeadas */
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }

</style>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Teamshub</title>
    <link rel="stylesheet" href="https://github.com/MigCamo/TeamsHubWebClient-/blob/main/wwwroot/css/StylesMainMenuProject.css">
</head>
<body>
    <!-- Barra de navegación vertical -->
    <div class="sidebar">
        <button class="back-btn">&larr;</button>
        <div class="icon-container">
            <div class="icon">🏠</div>
            <div class="icon">📊</div>
            <div class="icon">📚</div>
            <div class="icon">⚙️</div>
            <div class="icon">📝</div>
        </div>
    </div>

    <div class="content">
        <!-- Header -->
        <div class="header">
            <h1>Teamshub</h1>
            <h2>Aquí tendría que poner el nombre del proyecto</h2>
        </div>

        <!-- Tablero de actividades -->
        <div class="board">
            <!-- Actividades pendientes -->
            <div class="column pending">
                <div class="column-header">
                    <div class="label-background">
                        <h3>🔵 Actividades pendientes</h3>
                    </div>
                </div>
                <div id="pendingActivities" class="activity-list">
                    <!-- Tarjetas generadas dinámicamente -->
                </div>
                <button id="addActivityBtn">Agregar actividad</button> <!-- Botón debajo del cuadro -->
            </div>

            <!-- Actividades en proceso -->
            <div class="column in-progress">
                <div class="column-header">
                    <div class="label-background">
                        <h3>🔴 Actividades en proceso</h3>
                    </div>
                </div>
                <div id="inProgressActivities" class="activity-list">
                    <!-- Tarjetas generadas dinámicamente -->
                </div>
            </div>

            <!-- Actividades realizadas -->
            <div class="column completed">
                <div class="column-header">
                    <div class="label-background">
                        <h3>🟢 Actividades realizadas</h3>
                    </div>
                </div>
                <div id="completedActivities" class="activity-list">
                    <!-- Tarjetas generadas dinámicamente -->
                </div>
            </div>
        </div>

        <!-- Formulario emergente para agregar actividad -->
        <div id="activityForm" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h3>Agregar nueva actividad</h3>
                <form id="newActivityForm">
                    <label for="activityName">Nombre de la actividad:</label>
                    <input type="text" id="activityName" name="activityName" required>

                    <label para="startDate">Fecha de inicio:</label>
                    <input type="date" id="startDate" required>

                    <label para="endDate">Fecha de cierre:</label>
                    <input type="date" id="endDate" required>

                    <label para="responsible">Responsable:</label>
                    <input type="text" id="responsible" required>

                    <button type="submit">Agregar</button>
                </form>
            </div>
        </div>

        <!-- Modal para detalles -->
        <div id="detailModal" class="modal">
            <div class="modal-content">
                <span class="close">&times;</span>
                <h3>Detalles de la actividad</h3>
                <p id="activityDetails">Detalles aquí...</p>
                <label para="status">Cambiar estado:</label>
                <select id="statusCombo">
                    <option value="pending">Actividades pendientes</option>
                    <option value="in-progress">Actividades en proceso</option>
                    <option value="completed">Actividades realizadas</option>
                </select>
            </div>
        </div>
    </div>

    <script>
        // Obtener referencias a elementos importantes
const addActivityBtn = document.getElementById("addActivityBtn");
const modal = document.getElementById("activityForm");
const closeModals = document.querySelectorAll(".close");
const backBtn = document.querySelector(".back-btn");
const detailModal = document.getElementById("detailModal");
const activityDetails = document.getElementById("activityDetails");
const statusCombo = document.getElementById("statusCombo");

// Cerrar modal cuando se hace clic en la "x"
closeModals.forEach((element) => {
    element.addEventListener("click", () => {
        modal.style.display = "none";
        detailModal.style.display = "none";
    });
});

// Cerrar modal cuando se hace clic fuera de él
window.addEventListener("click", (event) => {
    if (event.target === modal || event.target === detailModal) {
        modal.style.display = "none";
        detailModal.style.display = "none";
    }
});

// Evento para el botón de regresar
backBtn.addEventListener("click", () => {
    alert("Volver a la ventana anterior"); // Puedes definir qué hace este botón
});

// Evento para el botón de agregar actividad
addActivityBtn.addEventListener("click", () => {
    modal.style.display = "block";
});

// Mover la tarjeta a la columna correcta según el estado
function moveCardToColumn(card, newState) {
    card.remove(); // Remover de la columna actual
    if (newState === "in-progress") {
        document.getElementById("inProgressActivities").appendChild(card);
    } else if (newState === "completed") {
        document.getElementById("completedActivities").appendChild(card);
    } else {
        document.getElementById("pendingActivities").appendChild(card);
    }
}

// Crear una tarjeta nueva y agregarla a "Actividades pendientes"
const newActivityForm = document.getElementById("newActivityForm");
newActivityForm.addEventListener("submit", (e) => {
    e.preventDefault();

    const activityName = document.getElementById("activityName").value;
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;
    const responsible = document.getElementById("responsible").value;

    const newCard = document.createElement("div");
    newCard.classList.add("activity-card");
    newCard.innerHTML = `
        <h4>${activityName}</h4>
        <p>Responsable: ${responsible}</p>
        <button class="view-details">Ver detalles</button>
    `;

    // Agregar la tarjeta a la columna de "Actividades pendientes"
    document.getElementById("pendingActivities").appendChild(newCard);

   

    </script>
</body>